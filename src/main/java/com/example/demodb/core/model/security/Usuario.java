package com.example.demodb.core.model.security;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;
import java.util.Set;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "usuario")
@AllArgsConstructor
@NoArgsConstructor
@Data
public class Usuario implements Serializable {

	private static final long serialVersionUID = 8167779603327526607L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@Column(name = "username", unique = true, nullable = false, length = 45)
	private String username;

	@Column(name = "password", nullable = false, length = 250)
	private String password;

//	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
//	private Set<UsuarioRol> usersRoleses = new HashSet<UsuarioRol>(0);

	private Date creado;
	private Date modificado;
	private String nombre;
	private String apellido;



	@ManyToMany(cascade = {CascadeType.MERGE, CascadeType.REFRESH}, fetch = FetchType.EAGER)
	@JoinTable(
			name = "usuarios_roles",
			joinColumns = @JoinColumn(name = "usuario_id"),
			inverseJoinColumns = @JoinColumn(name = "rol_id"),
			uniqueConstraints = {@UniqueConstraint(columnNames = {"usuario_id", "rol_id"})})
	private Set<Rol> roles;


	private Boolean activo;

	@ManyToMany(cascade = {CascadeType.MERGE, CascadeType.ALL}, fetch = FetchType.EAGER)
	@JoinTable(
			name = "config_usuario_sub_area",
			joinColumns = {@JoinColumn(name = "usuario_id", referencedColumnName = "id")},
			inverseJoinColumns = {@JoinColumn(name = "usuario_sub_area_id", referencedColumnName = "id")}
	)
	private Set<ConfigSubArea> configAreas;


}
